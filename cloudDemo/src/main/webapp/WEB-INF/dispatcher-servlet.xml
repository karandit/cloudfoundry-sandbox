<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:cloud="http://www.springframework.org/schema/cloud"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="http://www.springframework.org/schema/cloud http://www.springframework.org/schema/cloud/spring-cloud-0.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd">

	<context:component-scan base-package="hu.evosoft" />

	<bean id="rabbitListener" class="hu.evosoft.service.CloudRabbitListener" />

	<!-- RabbitMq -->
	<cloud:rabbit-connection-factory id="rabbitConnectionFactory" />
	<!-- Set up the AmqpTemplate/RabbitTemplate: -->
	<rabbit:template id="rabbitTemplate"
		connection-factory="rabbitConnectionFactory" />
	<!-- Request that queues, exchanges and bindings be automatically declared 
		on the broker: -->
	<rabbit:admin connection-factory="rabbitConnectionFactory" />
	<!-- Declare the "messages" queue: -->
	<rabbit:queue name="cloudDemo" durable="true" />
	<rabbit:listener-container id="rabbitListenerContainer"
		connection-factory="rabbitConnectionFactory">
		<rabbit:listener queues="cloudDemo" ref="rabbitListener" method="listen" />
	</rabbit:listener-container>
	
	<!-- MongoTemplate -->
	<cloud:mongo-db-factory id="mongoDbFactory" />
	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
	</bean>

	<!-- RedisTemplate -->
	<cloud:redis-connection-factory id="redisConnectionFactory" />
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
		p:connection-factory-ref="redisConnectionFactory" />

	<!-- Use this post processor to translate any MongoExceptions thrown in 
		@Repository annotated classes -->
	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />


	<bean id="jspViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/WEB-INF/jsp/" p:suffix=".jsp" />

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

</beans>